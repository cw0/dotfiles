{
  "*.tsx": {
    "alternate": "{dirname}/__tests__/{basename}.test.tsx",
    "type": "source",
    "template": [
      "import type {open} FC {close} from 'react';",
      "",
      "type {basename|camelcase|capitalize}Props = {open}",
      "  property?: unknown;",
      "{close};",
      "",
      "const {basename|camelcase|capitalize}: FC<{basename|camelcase|capitalize}Props> = _props => {",
      "  return <div>{basename|camelcase|capitalize}</div>;",
      "};",
      "",
      "export default {basename|camelcase|capitalize};"
    ]
  },
  "**/__tests__/*.test.tsx": {
    "alternate": "{}.tsx",
    "type": "test",
    "template": [
      "import {open} render {close} from '@/test-utils';",
      "import {basename|camelcase|capitalize} from '@/{dirname}/{basename}';",
      "",
      "describe('{basename|camelcase|capitalize}', () => {open}",
      "  it('matches snapshot', () => {open}",
      "    const {open} asFragment {close} = render(<{basename|camelcase|capitalize} />, {open}{close});",
      "    expect(asFragment()).toMatchSnapshot();",
      "   {close});",
      "{close});"
    ]
  },
  "*.ts": {
    "alternate": "{dirname}/__tests__/{basename}.test.ts",
    "type": "source"
  },
  "**/__tests__/*.test.ts": {
    "alternate": "{}.ts",
    "type": "test",
    "template": [
      "import {basename|camelcase|capitalize} from '@/{dirname}/{basename}';",
      "",
      "describe('{basename|camelcase|capitalize}', () => {open}",
      "  it('works', () => {open}",
      "    expect(true).toBe(true);",
      "   {close});",
      "{close});"
    ]
  }
}
