= ToC

*Advanced Identities and Federation*

* SAML 2.0 Identity Federation
  - For Enterprise Identity Federation
  - Stands for Security Assertion Markup Language
  - Used by microsoft for ADFS
  - Indirectly use on premises IDs with AWS
  - Enterprise Identity Provider which is SAML 2.0 compatible
  - Existing identity management team
  - Single source of truth ... more than 5000 users
  - Uses Iam Roles and temporary credentials (12 hour validity)
  - You never actually use external identities to access aws resources, they are exchanged for temporary aws credentials

* AWS Single Sign-on (SSO)
  - replaces historic use cases for SAML 2.0 Identity Federation
  - recommended by amazon for all new deployments
  - enables you to centrally manage sso access of aws accounts and external applications
  - flexible identity source
  - you have the option of using external identities
  - benefits
  -- define an identity source and then everything else is abstracted
  - supports
  -- built in identity store
  -- aws managed microsoft active directory
  -- on premises microsoft AD (two way trust or AD connector)
  -- external identity provider - saml2.0
  - provides:
  -- centralized permissions management across accounts
  -- single sign on via SSO identity sources
  -- integration w/ business applications
  -- integration w/ saml applications
  - workplace identities, not customer identities

* Amazon Cognito
  - Cognito has terrible naming
  -- provides authentication, authorization, and user management for web/mobile applications
  - two parts
  -- user pool
  --- sign in and receive JSON Web Token (JWT)
  --- most aws services cannot use JWTs
  --- does not grant access to aws services, they control sign up and sign in and provide JWTs
  --- can include external users (fb, twitter, etc)
  -- identity pool
  --- allow you to offer access to temporary aws credentials
  --- unauthenticated identities such as guest users
  --- federated identities can swap for short term AWS credentials to access AWS resources
  -- the two parts can operate together
  - The swapping of any external id provider token for AWS credentials is called web identity federation
  - This pattern enables a lot more sign ons than the 5000 user limit of IAM

* Amazon Workspaces
  - Managed Desktop as a service product
  -- Linux or Windows
  -- similar to citrix / remote desktop
  - Provided with a consistent desktop you can use from anywhere
  -- various sizes depending on configuration
  -- can use images provided by AWS or provide your own
  - Pricing
  -- Monthly
  -- Hourly (With base infrastructure cost)
  - Uses Directory services
  -- simple AD
  --- uses samba behind the scenes and does not provide as much access to programs as the other choices
  -- AWS Managed Microsoft AD
  --- host your AD through aws!
  -- AD Connector
  --- for existing microsoft AD
  - Workspaces use an ENI in a VPC
  - Accessed using client software on a user device
  - Data transit is the same as for VPC
  - Windows
  -- Can Access FSx & EC2 windows resources
  -- or on-prem resources over VPN or Direct Connect
  - Provide a user volume and a system volume and both provide at rest encryption (EBS + KMS)
  - Interestingly they do not run within a customer managed VPC
  -- Workspaces and Directory Services run in AWS managed VPCs and use ENIs injected into customer managed VPCs
  - Client bandwidth included in the cost
  - WORKSPACES ARE NOT HIGHLY AVAILABLE BY DESIGN
  -- can be affected by az failure
  - WORKSPACES DO NOT WORK WITH LINUX CLIENTS BY DEFAULT
  -- enabled through other platforms section of the directy settings

* AWS-Managed Microsoft Active directory
  - built using a native Microsoft Active Directory 2012 R2
  - runs within a VPC with subnets you provide
  - managed using standard Active Directory tools
  - supports group policies and single Sign-on
  - supports schema extension - MS AD Aware applications
  -- such as sharepoint, sql, distributed file system (DFS)
  - two sizes
  -- standard = 30k objects
  -- enterprise = 500k objects
  - Used for AD authentication/authorization of products and services within AWS
  - highly available by default (2+ AZ)
  - includes
  -- monitoring
  -- recovery
  -- replication
  -- snapshots
  -- maintenance
  - configurable and managed by aws
  - supports one-way and two-way external and forest trusts with on-premises active directory
  - Directory in aws can operate through a network link failure to any connected on-premises systems
  -- AD Connector CANNOT DO THIS
  -- can run independent of on prem systems
  - Supports RADIUS-based MFA
  - best choice for more than 5000 users and if you need trust relationships between aws and your on premises directories
  - Some services that support auth via directory services
  -- console
  -- Workspaces
  -- RDS
  -- WorkDocs
  -- QuickSight
  -- WorkMail
  -- Connect
  -- Chime
  - When configured with an on-prem AD
  -- each contains their own objects but can be configured to trust each other

* AD Connector (directory connector mode)
  - provides a pair of directory endpoints running in aws (ENIs in a VPC)
  - supports directory-aware AWS products
  - redirects requests to an existing directory server or servers
  - no directory data stored in AWS, all of it is redirected
  - use existing on-prem AD with directory compatible aws services without identity data in AWS
  - useful for proof of concepts within aws where you want to use existing identities
  - two sizes
  -- small
  -- large
  - size doesn't have an explicit limit it just controls the amount of compute allocated
  - requires 2 subnets within a VPC
  - requires one or more directory servers to be configured
  - requires a working network connection (no caching or data held locally)
  - connect via direct connect or VPN

* AWS Control Tower
  - allows the quick and easy set up of multi account aws environments
  - orchestrates other aws services to provide this functionality
  - provides:
  -- landing zone
  --- multi-account environment
  --- think organizations on crack
  --- provides single sign on and AD federation
  --- centralized logging and auditing
  -- guard rails
  --- detect / mandate rules and standards across accounts
  -- account factory
  --- automates and standardises new account creation
  -- dashboard
  --- single page oversight of the entire environment
  - uses cloudformation to create accounts so expect to see those stacks
  - landing zone
  -- well architected multi-account environment (has a home region)
  -- built with aws organizations, aws config, and cloudformation
  -- security OU - log archive  & audit accounts (cloudtrail & config logs)
  -- sandbox OU - test / less rigid security
  -- obviously you can create other OUs and accounts
  -- uses IAM Identity center for SSO, multiple-accounts and ID federation
  -- monitoring and notifications via cloudwatch and SNS
  -- end user account provisioning via service catalog
  - guard rails
  -- 3 types:
  --- Mandatory
  --- Strongly recommended
  --- Elective
  -- Preventative - stop you from doing things
  --- enforced or not enabled
  --- allow or deny regions or dissallow bucket policy changes
  -- detective - compliance checks (AWS config rules)
  --- 3 statuses
  ---- clear
  ---- in violation
  ---- not enabled
  --- i.e. detect if cloudtrail is enabled or ec2 has a public ipv4
  -- Preventative guard rails will stop things from happening, detective will only identify those things
  - Account factory
  -- automated account provisioning
  --- cloud admins or end users with appropriate permissions
  -- guard rails - automatically added
  -- account admin given to a named user
  -- accounts & network standard configuration
  --- can be configured to use specific vpcs when provisioning accounts at scale
  -- accounts can be closed or repurposed
  -- can be fully integrated with a business sdlc


